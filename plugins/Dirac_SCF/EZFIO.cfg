[two_dirac_ao_num]
type: integer
doc: twice the number of dirac AOs
interface: ezfio

[two_dirac_mo_tot_num]
type: integer
doc: twice the number of dirac MOs
interface: ezfio

[dirac_mo_coef_Re]
type: double precision
doc: Real part of the coefficient of the ith ao on the jth mo
interface: ezfio
size: (dirac_scf.two_dirac_ao_num,dirac_scf.two_dirac_mo_tot_num)

[dirac_mo_coef_Im]
type: double precision
doc: Imaginary part of the coefficient of the ith ao on the jth mo
interface: ezfio
size: (dirac_scf.two_dirac_ao_num,dirac_scf.two_dirac_mo_tot_num)

[dirac_ao_cartesian]
type: logical
doc: If true, use dirac AOs in Cartesian coordinates (6d,10f,...)
interface: ezfio,provider
default: true

[dirac_mo_label]
type: character*(64)
doc: Label characterizing the MOS (local, canonical, natural, etc)
interface: ezfio

[speed_of_light]
type: Positive_float
doc: Speed of light
interface: ezfio,provider,ocaml
default: 137.0359998

[dirac_interaction]
type: character*(32)
doc: Type of electron-electron interaction used. Possibles choices are [ Coulomb | Coulomb_Gaunt | Coulomb_Breit]
interface: ezfio,provider,ocaml
default: Coulomb

[dirac_range_separation]
type: character*(32)
doc: Use of full-range interaction or only long-range interaction. Possible choices are [ Full_range | Long_range]
interface: ezfio,provider,ocaml
default: Full_range

[dirac_exchange_functional]
type: character*(32)
doc: name of the relativistic exchange functional
interface: ezfio, provider, ocaml
default: dirac_short_range_LDA

[dirac_correlation_functional]
type: character*(32)
doc: name of the relativistic correlation functional
interface: ezfio, provider, ocaml
default: dirac_short_range_LDA

[dirac_ao_integrals_threshold]
type: Threshold
doc: If |<pq|rs>| < dirac_ao_integrals_threshold then <pq|rs> is zero
interface: ezfio,provider,ocaml
default: 1.e-15
ezfio_name: dirac_threshold_ao

[dirac_thresh_scf]
type: Threshold
doc: Threshold on the convergence of the Hartree Fock energy. 
interface: ezfio,provider,ocaml
default: 1.e-10

[dirac_n_it_scf_max]
type: Strictly_positive_int
doc: Maximum number of SCF iterations
interface: ezfio,provider,ocaml
default: 500

[dirac_scf_algorithm]
type: character*(32)
doc: Type of SCF algorithm used. Possible choices are [ Simple | DIIS]
interface: ezfio,provider,ocaml
default: Simple

[dirac_mo_guess_type]
type: MO_guess
doc: Initial MO guess. Can be [ HCore ]
interface: ezfio,provider,ocaml
default: HCore

[dirac_energy]
type: double precision
doc: Calculated HF energy
interface: ezfio

